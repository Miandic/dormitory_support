from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from keyboards import *

start_router = Router()


start_text = '–ü—Ä–∏–≤–µ—Ç!\n\n–Ø —á–∞—Ç-–±–æ—Ç, –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –≤ –æ–±—â–µ–∂–∏—Ç–∏–∏.\n\n–í—ã–±–µ—Ä–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞—Ç–µ–≥–æ—Ä–∏—é ü§î:'

@start_router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(start_text, reply_markup=start_kb(message.from_user.id))


@start_router.callback_query(F.data == 'Home')
async def cmd_start(call: CallbackQuery):
    await call.message.edit_text(start_text, reply_markup=start_kb(call.from_user.id))


@start_router.callback_query(F.data.startswith('category_'))
async def show_team(call: CallbackQuery):
    category = call.data.replace('category_', '')
    formatted_message = '–í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: '

    if category == 'social':
        formatted_message += '—Å–æ—Ü–∏–ª—å–Ω–∞—èüë®‚Äçüë©‚Äçüëß'
    if category == 'household':
        formatted_message += '–±—ã—Ç–æ–≤–∞—èüéÆ'
    if category == 'conflict':
        formatted_message += '–ö–æ–Ω—Ñ–ª–∏–∫—Ç–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—èüò°'
    if category == 'corruption':
        formatted_message += '–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–∏ –º–µ–±–µ–ª–∏/–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—èüèö'
    if category == 'other':
        formatted_message += '–ø—Ä–æ—á–µ–µü§∑‚Äç‚ôÇÔ∏è'

    formatted_message += '\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ:'
    await call.message.edit_text(formatted_message, reply_markup=change_kb(call.from_user.id))


@start_router.callback_query(F.data == 'Admin')
async def admin(call: CallbackQuery):
    await call.message.edit_text('–Ø –ø–æ–ª—É—á–∏–ª –≤–ª–∞—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –∏ –Ω–µ —Å–Ω–∏–ª–∞—Å—å –º–æ–µ–º—É –æ—Ç—Ü—É!', reply_markup=admin_kb())
